trigger:
  branches:
    include:
      - master
  paths:
    include:
      - /Azure_DevOps/Terraform/variables.tf
      - /Azure_DevOps/Terraform/main.tf

pool:
  vmImage: "ubuntu-latest"

variables:
  - group: Terraform-BuildVariables
  - name: subscription_id
    value: "5b3436-563d-4ed9-a045-8de8987460"
  - name: application_id
    value: "0db23492-a623-4c37-a03c-425463f167c3"
  - name: tenant_id
    value: "6434534-54e9-4fce-45-f00c23454c1f"
  - name: storage_accounts
    value: "sa01azuredevops"
  - name: blob_storage
    value: container01-azuredevops
  - name: state_file
    value: tf-statefile.state
  - name: sa-resource_group
    value: AzureDevOps

steps:
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    displayName: 'Install Terraform'
  - script: terraform version
    displayName: Terraform Version
  - script:  az login --service-principal -u $(application_id) -p $(spn-azuredevops-password) --tenant $(tenant_id)
    displayName: 'Log Into Azure'
  - script: terraform init -backend-config=resource_group_name=$(sa-resource_group) -backend-config="storage_account_name=$(storage_accounts)" -backend-config="container_name=$(blob_storage)" -backend-config="access_key=$(sa01-azdo-accesskey)" -backend-config="key=$(state_file)"
    displayName: "Terraform Init"
    workingDirectory: $(System.DefaultWorkingDirectory)/Azure_DevOps/Terraform
  - script: terraform plan -var="client_id=$(application_id)" -var="client_secret=$(spn-azuredevops-password)" -var="tenant_id=$(tenant_id)" -var="subscription_id=$(subscription_id)" -var="admin_password=$(vm-admin-password)" -out="out.plan"
    displayName: Terraform Plan
    workingDirectory: $(System.DefaultWorkingDirectory)/Azure_DevOps/Terraform
  - script: terraform apply out.plan
    displayName: 'Terraform Apply'
    workingDirectory: $(System.DefaultWorkingDirectory)/Azure_DevOps/Terraform